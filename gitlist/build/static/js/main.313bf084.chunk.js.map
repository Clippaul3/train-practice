{"version":3,"sources":["component/GithubList.jsx","component/Load.jsx","component/Tab.jsx","App.js","serviceWorker.js","index.js"],"names":["GithubList","props","openNewPage","window","open","htmlUrl","this","listNum","avatar","name","starsCount","forksCount","openIssuesCount","className","onClick","src","alt","style","margin","marginBottom","color","width","icon","faUser","fontWeight","faStar","faShareAlt","faExclamation","React","Component","Load","Tab","switchTab","e","url","target","getAttribute","document","querySelectorAll","forEach","btn","classList","remove","add","setState","tabName","tabUrl","addNumber","localStorage","setItem","setTimeout","FetchGit","addMore","bind","state","tabList","githubData","count","loading","number","getItem","axios","get","res","data","items","slice","filterOption","getElementById","renderInfo","addList","length","display","flexWrap","map","item","index","key","owner","avatar_url","stargazersCount","stargazers_count","forks_count","open_issues_count","html_url","type","textAlign","list","data-filter","id","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.313bf084.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/GithubList.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faStar,\n  faShareAlt,\n  faExclamation,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass GithubList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  openNewPage = () => {\n    window.open(this.props.htmlUrl);\n  };\n\n  render() {\n    const {\n      listNum,\n      avatar,\n      name,\n      starsCount,\n      forksCount,\n      openIssuesCount,\n    } = this.props;\n\n    const itemDetStyle = {\n      margin: \"0 auto\",\n    };\n\n    const listUserIcon = {\n      color: \"orange\",\n      width: \"20px\",\n    };\n\n    const listStarIcon = {\n      color: \"yellow\",\n      width: \"20px\",\n    };\n\n    const listForkIcon = {\n      color: \"skyblue\",\n      width: \"20px\",\n    };\n\n    const listIssueIcon = {\n      color: \"pink\",\n      width: \"20px\",\n    };\n\n    return (\n      <div className=\"github-list\" onClick={this.openNewPage}>\n        <span className=\"listNumber\">#{listNum}</span>\n        <img src={avatar} alt=\"\" className=\"listAvatar\" />\n        <p className=\"listName\">{name}</p>\n        <div style={itemDetStyle}>\n          <div style={{ marginBottom: \"5px\" }}>\n            <FontAwesomeIcon style={listUserIcon} icon={faUser} />\n            <span style={{ fontWeight: \"bold\"}}> {name}</span>\n          </div>\n          <div style={{ marginBottom: \"5px\" }}>\n            <FontAwesomeIcon style={listStarIcon} icon={faStar} />\n            <span>{starsCount} stars</span>\n          </div>\n          <div style={{ marginBottom: \"5px\" }}>\n            <FontAwesomeIcon style={listForkIcon} icon={faShareAlt} />\n            <span>{forksCount} forks</span>\n          </div>\n          <div>\n            <FontAwesomeIcon style={listIssueIcon} icon={faExclamation} />\n            <span>{openIssuesCount} open issues</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GithubList;\n","import React from \"react\";\nimport \"../css/Load.css\";\n\nclass Load extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n      return (\n          <div className=\"load\">\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img\"></div>\n              <div className=\"load_img2\"></div>\n          </div>\n      )\n  }\n}\n\nexport default Load;\n","import React from \"react\";\nimport axios from \"axios\";\nimport GithubList from \"./GithubList\";\nimport Load from \"./Load\";\nimport \"../css/Tab.css\";\n\nclass Tab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addMore = this.addMore.bind(this);\n    this.state = {\n      tabList: [\n        {\n          name: \"All\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E11&sort=stars&order=desc&type=Repositories\",\n        },\n        {\n          name: \"java\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E11+language:java&sort=stars&order=desc&type=Repositories\",\n        },\n        {\n          name: \"javascript\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E11+language:javascript&sort=stars&order=desc&type=Repositories\",\n        },\n        {\n          name: \"css\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E11+language:css&sort=stars&order=desc&type=Repositories\",\n        },\n        {\n          name: \"ruby\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E1+language:ruby&sort=stars&order=desc&type=Repositories\",\n        },\n        {\n          name: \"python\",\n          url:\n            \"https://api.github.com/search/repositories?q=stars:%3E1+language:python&sort=stars&order=desc&type=Repositories\",\n        },\n      ],\n      tabName: \"All\",\n      tabUrl:\n        \"https://api.github.com/search/repositories?q=stars:%3E11&sort=stars&order=desc&type=Repositories\",\n      githubData: [],\n      count: 0,\n      loading: true,\n      addNumber: 10,\n    };\n  }\n\n  switchTab = (e, { name, url }) => {\n    let { target } = e;\n    // console.log(target);\n    const filterOption = target.getAttribute(\"data-filter\");\n    if (filterOption) {\n      document.querySelectorAll(\".tab-list.active\").forEach((btn) => {\n        // console.log(btn);\n        btn.classList.remove(\"active\");\n      });\n      target.classList.add(\"active\");\n    }\n    this.setState({\n      tabName: name,\n      tabUrl: url,\n      addNumber: 10,\n    });\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"url\", url);\n    setTimeout(() => {\n      this.FetchGit();\n    }, 200);\n  };\n\n  addMore() {\n    const number = this.state.addNumber + 10;\n    // console.log(number)\n    this.setState({\n      addNumber: number,\n    });\n    this.FetchGit();\n  }\n\n  //获得数据\n  async FetchGit() {\n    this.setState({\n      githubData: [],\n    });\n    if (this.state.count === 0) {\n      const name = localStorage.getItem(\"name\");\n      const { addNumber } = this.state;\n      if (name) {\n        const res = await axios.get(localStorage.getItem(\"url\"));\n        this.setState({\n          githubData: res.data.items.slice(0, addNumber),\n          loading: false,\n          count: this.state.count + 1,\n          name: localStorage.getItem(\"name\"),\n          tabUrl: localStorage.getItem(\"url\"),\n        });\n        const filterOption = document.getElementById(\n          localStorage.getItem(\"name\")\n        );\n        if (filterOption) {\n          document\n            .querySelectorAll(\".tab-list.active\")\n            .forEach((btn) => btn.classList.remove(\"active\"));\n          filterOption.classList.add(\"active\");\n        }\n      } else {\n        const res = await axios.get(this.state.tabUrl);\n        const { addNumber } = this.state;\n        this.setState({\n          githubData: res.data.items.slice(0, addNumber),\n          loading: false,\n        });\n        const filterOption = document.getElementById(\"All\");\n        if (filterOption) {\n          document\n            .querySelectorAll(\".tab-list.active\")\n            .forEach((btn) => btn.classList.remove(\"active\"));\n          filterOption.classList.add(\"active\");\n        }\n      }\n    } else {\n      const res = await axios.get(this.state.tabUrl);\n      const { addNumber } = this.state;\n      this.setState({\n        githubData: res.data.items.slice(0, addNumber),\n        loading: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.FetchGit();\n  }\n\n  render() {\n    let renderInfo;\n    const { githubData, loading } = this.state;\n    const addList = loading ? \"add_hide\" : \"add_more\";\n    if (githubData.length !== 0) {\n      renderInfo = (\n        <div style={{ width: \"1200px\", display: \"flex\", flexWrap: \"wrap\" }}>\n          {githubData.map((item, index) => {\n            return (\n              <GithubList\n                key={index}\n                listNum={++index}\n                avatar={item.owner.avatar_url}\n                name={item.name}\n                stargazersCount={item.stargazers_count}\n                forksCount={item.forks_count}\n                openIssuesCount={item.open_issues_count}\n                htmlUrl={item.html_url}\n              />\n            );\n          })}\n          <div className={addList}>\n            <button type=\"button\" onClick={this.addMore} className=\"addBtn\">\n              加载更多\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      renderInfo = (\n        <div>\n          <h3 style={{ textAlign: \"center\" }}>\n            世界名画~（github热门项目加载中）\n          </h3>\n          <Load />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <span className=\"title\">Github热门项目</span>\n        <div className=\"tab\">\n          {this.state.tabList.map((list, index) => {\n            return (\n              <button\n                key={index}\n                className=\"tab-list\"\n                data-filter={list.name}\n                id={list.name}\n                onClick={(e) => this.switchTab(e, list)}\n              >\n                {list.name}\n              </button>\n            );\n          })}\n        </div>\n        <div className=\"list-content\">\n          {/* {githubData.length !== 0 ? (\n            githubData.map((item, index) => {\n              return (\n                <GithubList\n                  key={index}\n                  listNum={++index}\n                  avatar={item.owner.avatar_url}\n                  name={item.name}\n                  stargazersCount={item.stargazers_count}\n                  forksCount={item.forks_count}\n                  openIssuesCount={item.open_issues_count}\n                  htmlUrl={item.html_url}\n                />\n              );\n            })\n          ) : (\n            <div>\n              <h3 style={{ textAlign: \"center\" }}>\n                世界名画~（github热门项目加载中）\n              </h3>\n              <Load />\n            </div>\n          )} */}\n          {renderInfo}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tab;\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Tab from './component/Tab'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tab />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}